'use client';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';
import { ChakraProvider } from '@chakra-ui/react';
import ReduxProvider from './redux/provider';
// import { checkDatabaseConnection } from './redux/slices/databaseSlice';
// import { useEffect } from 'react';
// import { useDispatch } from 'react-redux';
// import { connectToDB } from '../../lib/db';
// import { store } from './redux/store';
const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

// export const metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// };
// connectToDB(store);

export default function RootLayout({ children }) {
  // const dispatch = useDispatch();

  // useEffect(() => {
  //   dispatch(checkDatabaseConnection());
  // }, [dispatch]);

  return (
    <html lang='en'>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ReduxProvider>
          <ChakraProvider>{children}</ChakraProvider>
        </ReduxProvider>
      </body>
    </html>
  );
}
